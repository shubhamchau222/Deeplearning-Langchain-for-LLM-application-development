LAngchain offers Following chains;

	1) LLMChain
	2) Sequential Chains
	3) SimpleSequentialChain
	4) SequentialChain
	5) Router Chain


from langchain.chat_models import ChatOpenAI
from langchain.prompts import ChatPromptTemplate
from langchain.chains import LLMChain


1) SimpleSequentialChain:
	- the chains which runs in sequence (one after another) 
	- output of previous chain used as input to next one
	- useful when there is one input & one output

	from langchain.chains import SimpleSequentialChain

	chain_one = LLMChain(llm=llm, prompt=first_prompt)
	chain_two = LLMChain(llm=llm, prompt=second_prompt)

	overall_simple_chain = SimpleSequentialChain(chains=[chain_one, chain_two],
                                             verbose=True
                                            )

    overall_simple_chain.run(product)

2) SequentialChain:
	- used when there are multiple inputs & outputs

	from langchain.chains import SequentialChain
	# prompt template 1: translate to english
	first_prompt = ChatPromptTemplate.from_template(
										"Translate the following review to english:"
										"\n\n{Review}"
										)
	# chain 1: input= Review and output= English_Review
	chain_one = LLMChain(llm=llm, prompt=first_prompt, 
	                     output_key="English_Review"
	                    )


	second_prompt = ChatPromptTemplate.from_template(
	"Can you summarize the following review in 1 sentence:"
	"\n\n{English_Review}"
	)
	# chain 2: input= English_Review and output= summary
	chain_two = LLMChain(llm=llm, prompt=second_prompt, 
								output_key="summary"
								)

	# prompt template 3: translate to english

	third_prompt = ChatPromptTemplate.from_template(
	"What language is the following review:\n\n{Review}"
	)

	# chain 3: input= Review and output= language
	chain_three = LLMChain(llm=llm, prompt=third_prompt,
	               output_key="language"
	              )


	# prompt template 4: follow up message

	fourth_prompt = ChatPromptTemplate.from_template(
	"Write a follow up response to the following "
	"summary in the specified language:"
	"\n\nSummary: {summary}\n\nLanguage: {language}"
	)

	# chain 4: input= summary, language and output= followup_message
	chain_four = LLMChain(llm=llm, prompt=fourth_prompt,
	                  output_key="followup_message"
	                 )

 	## Overall Chains
 	overall_chain = SequentialChain(
    chains=[chain_one, chain_two, chain_three, chain_four],
    input_variables=["Review"],
    output_variables=["English_Review", "summary","followup_message"],
    verbose=True
		)

3) Router Chain:
	
	- whern, we have multiple prompt & multiple sub-chains

	from langchain.chains.router import MultiPromptChain
	from langchain.chains.router.llm_router import LLMRouterChain,RouterOutputParser
	from langchain.prompts import PromptTemplate

	default_prompt = ChatPromptTemplate.from_template("{input}")
	default_chain = LLMChain(llm=llm, prompt=default_prompt)















